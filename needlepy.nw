% -*- mode: Noweb; noweb-code-mode: python-mode -*-

% Copyright (c) 2010, Maurizio Tomasi.
% All rights reserved.
% 
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
% 
%    * Redistributions of source code must retain the above copyright notice, this
%      list of conditions and the following disclaimer.
% 
%    * Redistributions in binary form must reproduce the above copyright notice,
%      this list of conditions and the following disclaimer in the documentation
%      and/or other materials provided with the distribution.
% 
%    * Neither the name of the Universita' degli Studi di Milano nor the names of
%      its contributors may be used to endorse or promote products derived from
%      this software without specific prior written permission.
% 
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
% ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
% WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
% DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
% FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
% DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
% SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
% CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
% OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
% OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

% This is a Noweb file describing and providing the implementation of NeedlePy,
% a needlet library.
%
% You can either extract a LaTeX document describing the code or the code
% itself from this file by using "noweave" or "notangle". It is better however
% to use the Makefile provided with this distribution, as it uses the
% appropriate command line switches for each command.
%
% Author: Maurizio Tomasi, 2010

\documentclass[a4paper,10pt,twoside]{article}
\usepackage{a4wide}
\usepackage{latexsym}
\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{noweb}
\usepackage{fancyhdr}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{ccaption}
\usepackage{textcomp}
\usepackage{titlesec}
\usepackage{mathpazo}
\usepackage[round]{natbib}

\hyphenation{Needle-Py}

\noweboptions{externalindex}

% Command used to indicate a section
\newcommand{\sectmark}{\S\ }

\titleformat{\section}[block]
  {\centering\normalfont\bfseries}
  {\sectmark\thesection.}{.5em}{}
\titleformat{\subsection}[runin]
  {\normalfont\bfseries}
  {\thesubsection.}{.5em}{}[. ]
\titleformat{\subsubsection}[runin]
  {\normalfont\bfseries}
  {}{.2em}{}[. ]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\pagestyle{fancy}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\sectionmark}[1]{%
  \markright{\thesection.\ #1}}
\fancyhf{}
\fancyhead[L,RO]{\bfseries\thepage}
\fancyhead[LO]{\bfseries\rightmark}
\fancyhead[RE]{\bfseries\leftmark}

\fancypagestyle{plain}{%
  \fancyhf{}
  \fancyfoot[C]{\thepage}
  \renewcommand{\headrulewidth}{0pt}
  \renewcommand{\footrulewidth}{0pt}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\captionnamefont{\small\bfseries}
\captiontitlefont{\small\itshape}

\hypersetup{pdftitle={NeedlePy},
pdfauthor={Maurizio Tomasi, Andrea Zonca},
pdfsubject={Commented implementation of the NeedlePy library},
pdfkeywords={CMB {data analysis} {needlets}},
pdfborder={0 0 0}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\NeedlePy}{NeedlePy}

\newcommand{\ud}{\mathrm{d}}
\newcommand{\vect}[1]{\mathbf{#1}}
\newcommand{\vers}[1]{\hat{#1}}

\begin{document}

\bibliographystyle{plainnat}

\title{\NeedlePy}
\author{M.~Tomasi, A.~Zonca}
\maketitle

\begin{abstract}
This document describes the implementation of \NeedlePy{}, a needlet library
written in Python.
\end{abstract}

\tableofcontents

\section{Introduction}

Needlets have been introduced by \citet{2006NarcowichNeedlets} as a powerful
tool for the analysis of spherical random fields. They can be seen as the
analogous of wavelets over a $\mathbb{S}^n$ field (a $n$-dimensional sphere),
as they implement a way of decomposing signals into a set of functions (called
``needlets'') which are well localized both in pixel and harmonic space. The
most important result in needlet theory is summed up by \textit{Proposition 1}
in \citet{2009BaldiNeedlets}, which says (1) that needlets implement a
\emph{tight frame} over $\mathbb{S}^n$ (i.e.\ a set of function which shares
many properties with orthonormal bases), and (2) that such frame has the
localization properties mentioned above. Such approach rotates around the
definition of a so-called \emph{window function} $b(\cdot)$, which allows to
apply the needlet transformation directly in the harmonic space. 

Several needlet basis are possible. \Citet{2008MarinucciNeedletsAndCMB}
introduced a needlet basis designed for CMB data analysis, which we shall call
the \emph{standard needlet basis}. \Citet{2010ScodellerMexicanNeedlets}
introduced a variant of the standard needlet, called \emph{Bernstein needlet
basis}, which shares many features with the former but has slightly better
localization properties in the real space. Finally,
\citep{2009GellerNeedletNearlyTightFrames} introduced a new kind of needlet
called \emph{Mexican needlet}, which is similar to the Symmetric Mexican
Hat Wavelet in the plane.

This document discusses the implementation of NeedlePy, a fast Python library
for the estimation of needlet transformations for Healpix maps for each of the
three needlet basis listed above. NeedlePy is released under a BSD license and
can be obtained from the following website:
\begin{center}
    \url{http://github.com/ziotom78/needlepy}
\end{center}


\section{Definition of the common infrastructure}

The overall structure of the library is contained in the file
\texttt{needlepy.py}. It implements the 
[[StandardNeedlet]], [[BernsteinNeedlet]] and [[MexicanNeedlet]] classes, each
derived from the base class [[Needlet]]. A comprehensive set of test cases is
implemented for each class as well: such tests can be run by running the
\texttt{needlepy.py} script directly from the command line (\texttt{python
needlepy.py}) or using the Nose
library\footnote{\url{http://code.google.com/p/python-nose/}}
(\texttt{nosetests needlepy.py}).
<<needlepy.py>>=
#!/usr/bin/env python

import numpy as np
import scipy.interpolate
import scipy.special
from scipy.misc import comb as binomial
import unittest
import sys

<<Definition of the [[Needlet]] class>>
<<Definition of the [[StandardNeedlet]] class>>
<<Definition of the [[BernsteinNeedlet]] class>>
<<Definition of the [[MexicanNeedlet]] class>>
<<Definition of test cases>>

if __name__ == "__main__":
    unittest.main ()
@


\section{The base class for needlet transformations}

The core of NeedlePy is the [[Needlet]] class, which provides a base class for
all the needlet basis implemented by the library. The definition of the class
implements a number of empty methods:
<<Definition of the [[Needlet]] class>>=
class Needlet:
    def __init__ (self):
	pass

    def real_space (self, pos, center = (0.0, 0.0)):
	pass
@ %def Needlet

\input{standard-needlets}
\input{bernstein-needlets}
\input{mexican-needlets}

\appendix

\section{Index of symbols}

Here we provide a list of the symbols used in the code. Each reference is of
the form \texttt{nL}, where \texttt{n} is the number of the page and \texttt{L}
a letter specifying the code chunk within that page starting from ``a''.
Underlined references point to the definition of the symbol.

\nowebindex

\bibliography{needlepy}
\end{document}
